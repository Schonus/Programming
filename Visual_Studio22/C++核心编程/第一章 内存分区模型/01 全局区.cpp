//#include <iostream>
//using namespace std;
//
////全局变量
//int g_a = 10;
//int g_b = 20;
//
////const修饰的全局变量，全局常量
//const int c_g_a = 10;
//const int c_g_b = 10;
//
//
//int main()
//{
//    //全局区
//    //全局变量，静态变量、常量
//
//    //创建普通的局部变量
//    int a = 0;
//    int b = 0; 
//
//    //显示地址
//    cout << "局部变量a的地址为" << (long long)&a << endl;
//    cout << "局部变量b的地址为" << (long long)&b << endl;
//    cout << "全局变量g_a的地址为" << (long long)&g_a << endl;
//    cout << "全局变量g_b的地址为" << (long long)&g_b << endl;
//
//    //静态变量
//    static int s_a = 30;
//    static int s_b = 40;
//    //显示地址
//    cout << "静态变量g_a的地址为" << (long long)&s_a << endl;
//    cout << "静态变量g_b的地址为" << (long long)&s_b << endl;
//
//    //常量
//    //字符串常量
//    cout << "字符串常量的地址为：" << (long long)(&"Hello,world!") << endl;
//    cout << "字符串常量的地址为：" << (long long)(&"Hello,world1!") << endl;
//    //const修饰的变量（const修饰的全局变量 const修饰的局部变量）
//    cout << "全局常量c_g_a的地址为：" << (long long)(&c_g_a) << endl;
//    cout << "全局常量c_g_b的地址为：" << (long long)(&c_g_b) << endl;
//    const int c_l_a = 20;//c-const,l-local,g-global
//    const int c_l_b = 20;
//    cout << "局部常量c_a的地址为：" << (long long)(&c_l_a) << endl;
//    cout << "局部常量c_b的地址为：" << (long long)(&c_l_b) << endl;
//    system("pause");
//    return 0;
//}