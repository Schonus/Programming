{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","left","accLeft","d","right","accRight","onKeyUp","onLoad","jumpAction","node","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    \r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 300,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0.5,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 500,\r\n        // 加速度\r\n        accel: 400,\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    runJumpAction: function () {\r\n\r\n        // 跳跃上升\r\n        var jumpUp = cc.tween().by(this.jumpDuration, { y: this.jumpHeight }, { easing: 'sineOut' });\r\n\r\n        // 下落\r\n        var jumpDown = cc.tween().by(this.jumpDuration, { y: -this.jumpHeight }, { easing: 'sineIn' });\r\n\r\n        // 创建一个缓动\r\n        var tween = cc.tween()\r\n                        // 按 jumpUp，jumpDown 的顺序执行动作\r\n                        .sequence(jumpUp, jumpDown)\r\n                        // 添加一个回调函数，在前面的动作都结束时调用我们定义的 playJumpSound() 方法\r\n                        .call(this.playJumpSound, this);\r\n\r\n        // 不断重复\r\n        return cc.tween().repeatForever(tween);\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onLoad: function() {\r\n        // 初始化跳跃动作\r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start()\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);    \r\n    },\r\n\r\n    onDestroy () {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },    \r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});\r\n\r\n\r\n"]}